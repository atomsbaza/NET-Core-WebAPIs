version: "3.7"
networks: 
  web_kafka:
    name: web_kafka
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
        - "2181:2181"
    networks: 
        - web_kafka
    container_name: zookeeper
    environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        # ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
        - zookeeper
    container_name: broker
    ports:
        # - 9092:9092
        - 19092:19092
    networks: 
      - web_kafka
    environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://127.0.0.1:19092
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://127.0.0.1:19092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        # KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        # KAFKA_CREATE_TOPICS: "Worker:1:1"
        # KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
        # ALLOW_PLAINTEXT_LISTENER: "yes"
        # KAFKA_ADVERTISED_HOST_NAME: kafka
  mongo:
    image: mongo:latest
    container_name: mongodb
    ports:
        - 27017:27017
    networks: 
      - web_kafka
    # environment:
    #     # - MONGO_INITDB_DATABASE: WorkerDb
    #     - MONGO_INITDB_ROOT_USERNAME: admin
    #     - MONGO_INITDB_ROOT_PASSWORD: admin
    # volumes:
    #     # - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:repo
    #     - mongodb_data_container:/data/db
  webapi:
    build:
      context: C:\Users\pisit\source\repos\NETCoreWebAPIs\KafkaProducer
      dockerfile: Dockerfile
    image: webapi
    container_name: producer
    ports:
      - 5000:80
    networks: 
      - web_kafka
  webapiconsumer:
    build:
      context: C:\Users\pisit\source\repos\NETCoreWebAPIs\KafkaConsumer
      dockerfile: Dockerfile
    image: webapicomsumer
    container_name: consumer
    networks: 
      - web_kafka
